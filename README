= RDBXML -- XML Databases for Ruby

This package provides wrapper functions to the C++ APIS for BDB XML (Dbxml) and
BDB (Db) as well as pure-Ruby convenience functions (RDBXML).  While the wrapper
layer should be more or less complete, the Ruby interface only supports basic
documents operations in this version of the library.

== Requirements
* Rake[http://rake.rubyforge.org] >= 7.0
* Berkely DBXML[http://dev.sleepycat.com/downloads/releasehistorybdbxml.html]

== Installation

=== The Easy Way

RDBXML is distributed as a Ruby Gem for easy installation, e.g.
    sudo gem install rdbxml

This will attempt to find the DBXML libaries/headers in the standard paths (plus
/usr/local/) and will use the interface files taken from the dbxml-2.2.13
distribution (the latest version, at the time of this writing).

=== The Right Way

Due to tight dependencies, it's recommended that you obtain, build, and install
the latest version of the DBXML distribution (from
Sleepycat[http://dev.sleepycat.com/downloads/releasehistorybdbxml.html]), e.g.:
  # fetch and extract
  cd /tmp
  wget http://downloads.sleepycat.com/dbxml-2.2.13.tar.gz
  tar -xvzf dbxml-2.2.13.tar.gz
  cd dbxml-2.2.13

  # build (see DBXML docs for further instructions)
  ./buildall.sh

  # install
  sudo cp -a /tmp/dbxml-2.2.13/install /usr/local
  sudo ldconfig

This will ensure that you have the correct versions of the various BDB and
BDBXML libraries, as well as the current SWIG Interface definitions included in the
the DBXML distribution.

You then pass the location of the (built) DBXML distribution to the RDBXML build system:
  DBXML_DIST=/tmp/dbxml-2.2.13 sudo gem install rdbxml

This will build, test, and install the RDBXML gem.

== Example Usage
  require 'rubygems'
  require 'rdbxml'

  # create database directory
  env_dir = './db-env'
  Dir.mkdir env_dir  unless File.exists? env_dir

  # create environment, database, and container
  env = RDBXML::env env_dir
  db = RDBXML::XmlManager.new env, 0
  docs = db['documents']

  # Create document
  docs['Document Name'] = '<doc>Documet XML</doc>'

  # Read document
  puts docs['Document Name'].to_s

== Disclaimer

This is an *alpha* relesae, intended to test the build system and the BDBXML API
wrappers.  The Ruby-style interface is not yet terribly useful (you can read and
write whole documents), but I wanted to get this basic version released before I
went back and started adding functionality.

Please report any issues on the RDBXML Website[http://rubyforge.org/projects/rdbxml].

Author::    Steve Sloan (mailto:steve@finagle.org)
Copyright:: Copyright (c) 2006 Steve Sloan
License::   MIT
